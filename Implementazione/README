Dobbiamo implementare in Java due cose:
    1) La business logic, cioè quanto modellato con dcd e soprattutto dsd
    
    2) La porzione di db che supporti il punto 1)
    
Il tutto partendo dal codice sviluppato nell'iterazione precedente, ovvero quello per Gestione Menù.

Come strutturare il progetto:

    Package per uno strato dell'architettura -> un package per ogni gruppo di classi del dcd dell'uc corrente
    
    Dovremmo aggiungere anche un package per i test, ma sarebbe troppo lento, quindi ci accontentiamo di sofisticatissimi test manuali
    
ATTENZIONE! Il modulo generale corrisponde al package businesslogic.  
  
    
Come iniziare ad implementare:
L'idea è quella di iniziare il popolamento dello strato business logic creando, per ogni classe
necessaria per implementare questo uc, lo schelettro (cioè file + proprietà strutturali).

Implementare le operazioni

I metodi sono l'implementazione delle operazioni del DCD, mentre il codice del singolo metodo è quello
mostrato nel DSD corrispondente.

I metodi che stanno al di fuori dell'UC corrente possono essere implementati in modo che restituiscano
un valore di default. Questo vale in generale per tutto ciò che sta al di fuori dell'UC corrente:
conviene implementarlo con codice dummy, in modo da poter fare almeno i test.

Ricordare che l'eccezione qui rappresenta un errore di programmazione (solitamente a livello ui,
perchè, ad esempio, abbia consentito di far modifiche ad un utente che non è chef).

Le operazioni con parametri opzionali vengono implementati con overloading: si definisce
un metodo che implementa la versione con parametri, che poi viene richiamato dagli altri,
passando null al posto del parametro assente.

L'implementazione DI OGNI SINGOLA OPERAZIONE è seguita dal test, fatto tramite interfaccia grafica.
Il test viene fatto realizzando una classe contenente il main, che è una singleton.
Le uniche proprietà di questa classe sono i controller GRASP dei vari moduli.
La classe CatERing consentirà quindi di accedere ai controller ed effettuare i test.


Conviene usare IntelliJ
